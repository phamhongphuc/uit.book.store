os: linux
language: generic

cache:
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder
  
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine-mono

before_script:
  - git lfs pull

stages:
  - Parallel Jobs

jobs:
  include:
    # Unit Test
    - stage:          Parallel Jobs
      env:            ❤ = Test
      before_install:
        - nvm install 8
        - node --version
        - npm --version
        - nvm --version
        - yarn --version
      install:
        - yarn --link-duplicates --pure-lockfile
      script:         
        - yarn test
        - yarn release:dir

    # Release Window
    - stage:          Parallel Jobs
      if:             (branch IN (master, release)) AND (tag ~= ^v)
      env:            ❤ = Release Windows with Docker in Linux 
      script:
        - |
          if [ "$TRAVIS_OS_NAME" == "linux" ]; then
            docker run --rm \
              --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
              -v ${PWD}:/project \
              -v ~/.cache/electron:/root/.cache/electron \
              -v ~/.cache/electron-builder:/root/.cache/electron-builder \
              electronuserland/builder:wine \
              /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --win && ls dist\"
          else
            yarn release
          fi
        - ls dist\
      deploy:
        provider: releases
        api_key:
          secure: $API_KEY
        file: 
          - dist/BookStore.Setup.exe
        skip_cleanup: true
        on:
          tags: true
          repo: phamhongphuc/uit.book.store
          branch: master

    # Release Linux
    - stage:          Parallel Jobs
      if:             (branch IN (master, release)) AND (tag ~= ^v)
      env:            ❤ = Release Linux
      before_install:
        - nvm install 8
        - node --version
        - npm --version
        - nvm --version
        - yarn --version
      install:
        - yarn --link-duplicates --pure-lockfile
      script:
        - yarn release --linux
        - ls dist\
      deploy:
        provider: releases
        api_key:
          secure: $API_KEY
        file: 
          - dist/BookStore.Setup.appimage
          - dist/BookStore.Setup.snap
        skip_cleanup: true
        on:
          tags: true
          repo: phamhongphuc/uit.book.store
          branch: master

after_success: ./.travis/discord.sh success $WEBHOOK_URL
after_failure: ./.travis/discord.sh failure $WEBHOOK_URL